package Server
public
	with DataTypes;	
	renames DataTypes::all;
	
	with Buses;
	with SEI;
	
	system ServerSystem
		features
			data_in : in data port MeasuredData;
			wifi : requires bus access Buses::WiFi;
		flows
			mqtt_sink : flow sink data_in;
	end ServerSystem;
	
	system implementation ServerSystem.impl
		subcomponents
			mqtt_server : system MqttServerSystem;
			database : system DatabaseSystem;
			ethernet : bus Buses::Ethernet;
			cpu : processor EthProcessor;
			
		connections
			data_in_mqtt : port data_in -> mqtt_server.data_in;
			mqtt_db: port mqtt_server.data_out -> database.data_in;
			
			mqtt_eth: bus access ethernet <-> mqtt_server.eth;
			database_eth : bus access ethernet <-> database.eth;
			
			cpu_eth : bus access ethernet <-> cpu.eth;
			
		flows
			e2e_mqtt_db : end to end flow mqtt_server.mqtt_src -> mqtt_db -> database.data_sink;
	    properties
        	Actual_Connection_Binding => (reference(ethernet)) applies to mqtt_db, cpu_eth;
			Actual_Processor_Binding => (reference(cpu)) applies to mqtt_server, database;
			
			SEI::BandWidthCapacity => 10.0 GBytesps applies to ethernet;
			SEI::BandWidthBudget => 2.0 GBytesps applies to mqtt_db;
			
	end ServerSystem.impl;
	
	system MqttServerSystem
		features
			data_in : in data port MeasuredData;
			data_out : out data port ProcessedData;
			eth : requires bus access Buses::Ethernet;
		flows
			mqtt_sink : flow sink data_in;
			mqtt_src : flow source data_out;
	end MqttServerSystem;
	
	
	system DatabaseSystem
		features
			data_in : in data port DataTypes::ProcessedData;			
			eth : requires bus access Buses::Ethernet;
		flows
			data_sink : flow sink data_in;
	end DatabaseSystem;
	
	processor EthProcessor
		features
			eth : requires bus access Buses::Ethernet;
	end EthProcessor;
	
	
end Server;
